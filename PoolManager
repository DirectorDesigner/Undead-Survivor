using System.Collections.Generic;
using UnityEngine;

public class PoolManager : MonoBehaviour
{

     
    public GameObject[] prefabs; // 프리팹들을 보관할 변수 = 프리팹 2개면
                                 // [] = 배열

    List<GameObject>[] pools; // 풀 담당을 하는 리스트들 = 리스트도 2개

    void Awake()
    {
        pools = new List<GameObject>[prefabs.Length];      // 프리팹 개수만큼 리스트 배열 생성
        for (int index = 0; index < pools.Length; index++) // 프리팹 개수만큼 반복
                                                           // for(반복문) = 시작문; 조건문; 중감문
        {
            pools[index] = new List<GameObject>(); // 각 리스트 배열마다 새로운 리스트 생성
        }
    }

    public GameObject Get(int index) // index = 프리팹 번호
    {
        GameObject select = null;

        // 선택한 풀의 놀고(비활성화 된)있는 게임 오브젝트 접근
        // 만약 발견하면 select 변수에 할당
        foreach (GameObject item in pools[index])       // foreach = 배열, 리스트를 데이터를 순차적으로 접근하는 반복문
        {
            if (!item.activeSelf)                       // activeSelf = 게임 오브젝트가 활성화 되어있는지 확인하는 속성
            {
                select = item;                          // select 변수에 할당
                select.SetActive(true);                 // 활성화 = 플레이어를 쫓아라
                break;                                  // 발견했으면 반복문 탈출
            }
        }
       
        // 못 찾으면    
        // 프리팹으로부터 새로 생성해서 select 변수에 할당
        if (!select)                                             // select 변수가 비어있으면
        {
            select = Instantiate(prefabs[index], transform);     // 프리팹으로부터 새로 생성, Instantiate = 원본 오브젝트를 복제해서 장면에 생성하는 함수
            pools[index].Add(select);                            // 생성한 게임 오브젝트를 해당 풀에 추가
        }

        return select;
    }


}
